swagger: '2.0'
info:
  title: eBao Cloud API (Prospects)
  description: Sales API for the prospect domain on eBao Cloud
  version: "0.0.5"
# the domain of the service
host: localhost:8080
# array of all schemes that your API supports
schemes:
  - http
  - https
# will be prefixed to all paths
basePath: /api/v1
produces:
  - application/json

# ---- Security Definitions -----------
securityDefinitions:
  APISecurity:
    type: apiKey
    in: header
    name: Token

paths:
  '/prospects':
    get:
      summary: Fetch a list of prospects records (basic information)
      description: |
        The prospects endpoint returns a list of prospects (with basic information) for the current user based on the session. There are a number of parameters to help with filtering and sorting of the required prospects.
      security:
        - APISecurity: []
      parameters:
        - $ref: '#/parameters/queryOffset'
        - $ref: '#/parameters/queryLimit'
        - $ref: '#/parameters/queryKeys'
        - $ref: '#/parameters/querySort'
        - $ref: '#/parameters/queryFilter'

      tags:
        - Prospect
      responses:
        200:
          description: Returns a list of basic prospect records
          schema:
            type: object
            properties:
              docs:
                type: array
                items:
                  $ref: '#/definitions/ProspectBasic'
              totalDocs:
                type: integer
              offset:
                type: integer

        400:
          $ref: '#/responses/Standard400Response'
        401:
          $ref: '#/responses/Standard401Response'
        500:
          $ref: '#/responses/Standard500Response'

    post:
      summary: Create a new prospect record
      description: |
        A POST request to this end point is used to create a new prospect record. The details of the prospect is submitted in the request body.
      security:
        - APISecurity: []
      parameters:
        - name: bodyParam
          in: body
          required: true
          description: Details of the prospect record to create
          schema:
            $ref: '#/definitions/Prospect'
      tags:
        - Prospect
      responses:
        200:
          description: The prospect is successfully created. Returns the newly created prospect record
          schema:
            $ref: '#/definitions/Prospect'

        400:
          $ref: '#/responses/Standard400Response'
        401:
          $ref: '#/responses/Standard401Response'
        500:
          $ref: '#/responses/Standard500Response'

  '/prospects/detailed':
    post:
      summary: Fetch a list of detailed prospects records (complete information)
      description: |
        This end point returns a list of prospects (with complete information) for the current authenticated user. There are a number of parameters to help with filtering and sorting of the required prospects. Compared to GET /prospects, this end point allows for fetching a list of prospects with detailed information instead of just basic information.
      security:
        - APISecurity: []
      parameters:
        - $ref: '#/parameters/queryOffset'
        - $ref: '#/parameters/queryLimit'
        - $ref: '#/parameters/querySort'
        - $ref: '#/parameters/queryKeys'
        - $ref: '#/parameters/queryFilter'
      tags:
        - Prospect
      responses:
        200:
          description: Returns a list of detailed prospect records
          schema:
            type: object
            properties:
              docs:
                type: array
                items:
                  $ref: '#/definitions/Prospect'
              totalDocs:
                type: integer
              offset:
                type: integer

        400:
          $ref: '#/responses/Standard400Response'
        401:
          $ref: '#/responses/Standard401Response'
        500:
          $ref: '#/responses/Standard500Response'

  '/prospects/{prospectId}':
    get:
      summary: Fetch a prospect document
      description: This end point is used to fetch detailed prospect document for the given prospect id. The prospect document can then be used for editing or for deletion.
      security:
        - APISecurity: []
      tags:
        - Prospect
      parameters:
        - $ref: '#/parameters/paramProspectId'

      responses:
        200:
          description: Response for the successful retrieval of the prospect document.
          schema:
            $ref: "#/definitions/Prospect"
        401:
          $ref: '#/responses/Standard401Response'
        404:
          $ref: '#/responses/Standard404Response'
        500:
          $ref: '#/responses/Standard500Response'

    delete:
      summary: Delete a prospect document.
      description: This end point is used to delete the prospect document with the given prospect id. The version of the prospect document is required to ensure there are no changes since the prospect document was fetched. e.g. DELETE /prospects/1234?version=122
      security:
        - APISecurity: []
      tags:
        - Prospect
      parameters:
        - $ref: '#/parameters/paramProspectId'
        - name: version
          in: query
          required: true
          description: The version of the record
          type: number
      responses:
        200:
          $ref: '#/responses/SuccessResponse'
        401:
          $ref: '#/responses/Standard401Response'
        404:
          $ref: '#/responses/Standard404Response'
        409:
          $ref: '#/responses/ConflictResponse'
        500:
          $ref: '#/responses/Standard500Response'

    put:
      summary: Save a prospect document.
      description: When updating an existing prospect document, the version field must be part of the prospect details in the request body. This is to ensure that there were no changes to the prospect document since it was fetched.
      security:
        - APISecurity: []
      tags:
        - Prospect
      parameters:
        - $ref: '#/parameters/paramProspectId'
        - name: bodyParam
          in: body
          required: true
          description: Represents the prospect record to save
          schema:
            $ref: '#/definitions/Prospect'

      responses:
        200:
          description: Response when the prospect document is successfully updated.
          schema:
            $ref: "#/definitions/Prospect"
        400:
          $ref: '#/responses/Standard400Response'
        401:
          $ref: '#/responses/Standard401Response'
        404:
          $ref: '#/responses/Standard404Response'
        409:
          $ref: '#/responses/ConflictResponse'
        500:
          $ref: '#/responses/Standard500Response'

  '/prospects/_bulk':
    post:
      summary: Bulk creation of prospects
      description: Allow for the creation of multiple prospect records in one request. A possible use case for the client applications is where a list of prospects are uploaded by the user. Instead of creating the prospects one at a time, it would be more efficient to allow for bulk creation.
      security:
        - APISecurity: []
      tags:
        - Prospect
      parameters:
        - name: bodyParam
          in: body
          description: Representing the prospect record to save
          required: true
          schema:
            type: array
            items:
              type: object
              properties:
                operation:
                  type: string
                  description: Valid value is CREATE
                assignmentId:
                  type: string
                doc:
                  $ref : '#/definitions/Prospect'

      responses:
        200:
          description: Response where the request is successfully processed. The response will the list containing the prospect records. All prospect documents must be successfully processed for a 200 response.
          schema:
            type: array
            items:
              $ref: '#/definitions/Prospect'
        400:
          description: Response when one or more prospect documents has errors
          schema:
            type: array
            items:
             type: object
             properties:
              ok:
                type: boolean
              doc:
                $ref: '#/definitions/Prospect'
              errors:
                type: array
                items:
                  type: object
                  properties:
                    code:
                      type: string
                    message:
                      type: string
                    field:
                      type: string
        401:
          $ref: '#/responses/Standard401Response'
        500:
          $ref: '#/responses/Standard500Response'

  '/prospects/age':
    get:
      summary: Calculate the age given the age method and birth date
      description: Calculate the age given the age method & birth date. Valid values for the age method are ANB = Age Next Birthday, ALB = Age Last Birthday, ANRB = Age Nearest Birthday. In dealing with prospects, the client application will capture the birth date and may wish to display the age of the prospect. Commonly, the ageing method is defined at the company level and known at design time although the eBaoTech product factory provides fine grain control to set the age method at product level.
      security:
        - APISecurity: []
      tags:
        - Prospect

      parameters:
        - name: ageMethod
          in: query
          required: true
          type: string
          description: Valid values are ANB, ALB, ANRB
        - name: birthDate
          in: query
          type: string
          format: date
          description: Date format should be YYYY-MM-DD
          required: true

      responses:
        200:
          description: Successful response where the age is returned
          schema:
            properties:
              age:
                type: number
        400:
          $ref : '#/responses/Standard400Response'
        401:
          $ref : '#/responses/Standard401Response'
        500:
          $ref: '#/responses/Standard500Response'


  '/assignments':
    get:
      summary: Fetch a list of assignment documents
      description: |
        This end point returns a list of assignments for the current authenticated user. There are a number of parameters to help with filtering and sorting of the required assignment documents.
      security:
        - APISecurity: []
      parameters:
        - $ref: '#/parameters/queryOffset'
        - $ref: '#/parameters/queryLimit'
        - $ref: '#/parameters/queryKeys'
        - $ref: '#/parameters/querySort'
        - $ref: '#/parameters/queryFilter'

      tags:
        - Prospect
      responses:
        200:
          description: Returns a list of assignment (of prospects) documents
          schema:
            type: object
            properties:
              docs:
                type: array
                items:
                  $ref: '#/definitions/Assignment'
              totalDocs:
                type: integer
              offset:
                type: integer

        400:
          $ref: '#/responses/Standard400Response'
        401:
          $ref: '#/responses/Standard401Response'
        500:
          $ref: '#/responses/Standard500Response'


  '/assignments/_bulk':
    post:
      summary: Bulk creation of assignments
      description: This end point is used for insurers to create documents for the assignment of prospects to the intermediaries. As an example, the insurer may have collected a number of leads due to a roadshow and would like the intermediaries to follow up. Assuming that the insurer has an application that can communicate with the eBao cloud services, it could create a list of assignment documents on to the eBao cloud platform. The intermediaries may be given the option to "take-up" the assigments. Apart from the creation of assignment documents, this end point can also be used to delete assignment documents. This can be done by specifing the operation as "DELETE" for the assignment document (in the bodyParam). The assigner and assignerReference in the assignment document will be used to find the assignment document to be removed.
      security:
        - APISecurity: []
      tags:
        - Prospect
      parameters:
        - name: bodyParam
          in: body
          description: Representing the assignment of prospect documents
          required: true
          schema:
            type: array
            items:
              type: object
              properties:
                operation:
                  type: string
                  description: Valid value is CREATE, DELETE
                doc:
                  $ref : '#/definitions/Assignment'

      responses:
        200:
          description: Response where the request is successfully processed. The response will the list of the assignment documents (created or deleted). All assignment documents must be successfully processed for a 200 response.
          schema:
            type: array
            items:
              $ref: '#/definitions/Assignment'
        400:
          description: Response when one or more assignment documents has errors
          schema:
            type: array
            items:
             type: object
             properties:
              ok:
                type: boolean
              doc:
                $ref: '#/definitions/Assignment'
              errors:
                type: array
                items:
                  type: object
                  properties:
                    code:
                      type: string
                    message:
                      type: string
                    field:
                      type: string
        401:
          $ref: '#/responses/Standard401Response'
        500:
          $ref: '#/responses/Standard500Response'



# **************** definitions ******************

definitions:

  # Bulk:
  #   type: object
  #   properties:
  #     operation:
  #       type: string
  #       description: Valid value is CREATE
  #     doc:
  #       $ref: '#/definitions/Prospect'

  ProspectBasic:
    type: object
    properties:
      pk:
        type: string
        description: Unique id for the prospect
      doctype:
        type: string
        default: "Prospect"
      prospectName:
        type: string
        description: Name of the prospect
      prospectTitle:
        type: string
        description: Title given to the person
      mobileNumber:
        type: string
        description: Mobile number of the prospect
      email:
        type: string
        description: Email address for the prospect
      gender:
        type: string
      birthDate:
        type: string
        format: date
        description: Date of birth for this prospect
      occupation:
        type: string
        description: The occupation code for the prospect. Used to determine the risk class.
      smoker:
        type: string
        description: SMOKER to indicate smoker and NON-SMOKER otherwise
      status:
        type: string
        description: Status of the prospect.
      userName:
        type: string
        description: The user that created this prospect record
      lastModified:
        type: string
        format: date
        description: The last time this prospect record has been modified
      version:
        type: number
        description: The revision number used for optimistic locking
      assignmentId:
        type: string
        description: Unique id of assignment - optional
      extensionFields:
        type: object
        description: extensionFields is an object to hold customized fields
        additionalProperties:
          type: string

  Prospect:
    allOf:
      - $ref: '#/definitions/ProspectBasic'
      - $ref: '#/definitions/ProspectPersonalData'
      - properties:
          addresses:
            type: array
            items:
              $ref: '#/definitions/ProspectAddress'
          family:
            type: array
            items:
              $ref: '#/definitions/ProspectRelation'

  ProspectAddress:
    type: object
    properties:
      addressType:
        type: string
        description: Type of address, usually WORK, HOME, CORRESPONDENCE
      addressLine1:
        type: string
      addressLine2:
        type: string
      city:
        type: string
      country:
        type: string
      postcode:
        type: string
      extensionFields:
        type: object
        description: extensionFields is an object to hold customized fields
        additionalProperties:
          type: string

  ProspectRelation:
    type: object
    properties:
      relationship:
        type: string
        description: Person related to the prospect. Valid values include "SPOUSE","BROTHER","SISTER","FATHER","MOTHER","SON","DAUGHTER"
      relationName:
        type: string
      relationTitle:
        type: string
        description: Based on code table for title list
      relationGender:
        type: string
        description: Based on code table for gender. Valid values are MALE, FEMALE
      relationBirthDate:
        type: string
        format: date
      smoker:
        type: string
        description: Based on code table for smoker options. Valid values include SMOKER, NON-SMOKER
      occupation:
        type: string
        description: Based on the occupation code table
      extensionFields:
        type: object
        description: extensionFields is an object to hold customized fields
        additionalProperties:
          type: string

  ProspectPersonalData:
    type: object
    properties:
      maritalStatus:
        type: string
        description: Based on code table for marital status
      nationality:
        type: string
        description: Based on code table for nationalities
      idType:
        type: string
        description: Based on code table for list of valid identification types
      idNumber:
        type: string
        description: Identification reference number
      birthCountry:
        type: string
        description: Based on code table for countries
      residenceCountry:
        type: string
        description: Based on code table for countries
      height:
        type: integer
        description: Height in cms
      weight:
        type: integer
        description: Weight in kgs
      employmentStatus:
        type: string
        description: Based on code table for employment statuses
      employmentStatusOthers:
        type: string
        description: Description of employment status if not in dropdown list
      companyName:
        type: string
        description: Company that the prospect works in
      officeNumber:
        type: string
        description: Phone number at office
      homePhoneNumber:
        type: string
        description: The house phone number
      mainIncome:
        type: number
        format: currency
        description: The amount of the primary income source
      bonusIncome:
        type: number
        format: currency
      otherIncome:
        type: number
        format: currency
        description: Other sources of income, e.g. investments
      extensionFields:
        type: object
        description: extensionFields is an object to hold customized fields
        additionalProperties:
          type: string

  Assignment:
    type: object
    properties:
      pk:
        type: string
        readOnly: true
      doctype:
        type: string
        default: "Assignment"
        readOnly: true
      assigner:
        type: string
      assignerReference:
        type: string
        description: Assigner's unique reference to this assignment document
      assignmentType:
        type: string
        default: "Prospect"
      expiryDate:
        type: string
        format: date
      assignee:
        type: string
      status:
        type: string
      userName:
        type: string
        description: The user that created this prospect record
      lastModified:
        type: string
        format: date
        description: The last time this prospect record has been modified
      version:
        type: number
        description: The revision number used for optimistic locking
      extensionFields:
        type: object
        description: extensionFields is an object to hold customized fields
        additionalProperties:
          type: string
      data:
        $ref: '#/definitions/Prospect'


# ***************** parameters **************

parameters:

  queryOffset:
    name: offset
    in: query
    description: Number of records to skip in the result list
    required: false
    type: number
    format: integer
    default: 0

  queryLimit:
    name: limit
    in: query
    description: Limit the number of rows to return
    required: false
    type: number
    format: integer
    default: 100

  querySort:
    name: sort
    in: query
    description: Sorting order. Prefix with '-' for descending order
    required: false
    type: string
    format: string

  queryKeys:
    name: keys
    in: query
    description: Specify multiple rows to fetch ?keys=123,456
    required: false
    type: array
    collectionFormat: csv
    items:
      type: string

  # queryPk:
  #   name: pkList
  #   in: body
  #   description: Specify multiple rows to fetch {pkList:[12,13,1555]}
  #   required: false
  #   schema:
  #     type: object
  #     properties:
  #       pkList:
  #         type: array
  #         items:
  #           type: number

  queryFilter:
    name: filter
    in: query
    description: Filter criteria to apply to the search. The format used is filter=condition|condition. The format of the condition is {key}\*{operator}\*{value) e.g. filter=name\*startsWith\*A. The \* is used to delimit the components of the criteria. As an example, to find rows with name that starts with 'A', specify as filter=name\*startsWith\*A .  When there are multiple criterias in the condition, e.g. find documents where name startsWith A AND age greater than 30, specify as filter=name\*startsWith\*A;age\*gt\*30 . The ; character is used to separate the criterias. For more complex filters, e.g. Find documents where name starts with 'A' OR name starts with B, then specify as filter=name\*startsWith\*A|name\*startsWith\*B . Use the | to separate OR conditions.
    required: false
    type: array
    collectionFormat: pipes
    items:
      type: string

  paramProspectId:
    name: prospectId
    in: path
    required: true
    description: Unique id for the prospect
    type: string


# *************** responses *******************

responses:

  Standard400Response:
    description: Response to indicate that the request cannot be processed due to a client error (submitted data has errors).
    schema:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
              message:
                type: string
              code:
                type: string

  Standard401Response:
    description: Response when the client is not authorized for this operation.
    schema:
      type: object
      properties:
        message:
          type: string
          description: "Authentication credentials were missing or incorrect"

  Standard404Response:
    description: Response when the document is not found.
    schema:
      type: object
      properties:
        message:
          type: string
          description: "The item does not exist"

  Standard500Response:
    description: Response when there is an unexpected server error.
    schema:
      type: object
      properties:
        message:
          type: string
          description: "An unexpected error has occurred. Please try again later"

  SuccessResponse:
    description: Response for request successfully processed
    schema:
      type: object
      properties:
        message:
          type: string
          description: "The request was successfully processed"

  ConflictResponse:
    description: Response when there is a conflict, i.e. the document has been changed since it was last fetched. The current document version does not match the version supplied.
    schema:
      type: object
      properties:
        message:
          type: string
          description: "The document has changed since it was last fetched. Please fetch the document again to get the latest version of the document"
